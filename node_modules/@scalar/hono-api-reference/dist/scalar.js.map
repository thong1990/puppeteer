{
  "version": 3,
  "sources": ["../src/scalar.ts"],
  "sourcesContent": ["import { getHtmlDocument } from '@scalar/core/libs/html-rendering'\nimport type { Context, Env, MiddlewareHandler } from 'hono'\n\nimport type { ApiReferenceConfiguration } from './types'\n\n/**\n * The default configuration for the API Reference.\n */\nconst DEFAULT_CONFIGURATION: Partial<ApiReferenceConfiguration> = {\n  _integration: 'hono',\n}\n\n/**\n * The custom theme for Hono\n */\nexport const customTheme = `\n.dark-mode {\n  color-scheme: dark;\n  --scalar-color-1: rgba(255, 255, 245, .86);\n  --scalar-color-2: rgba(255, 255, 245, .6);\n  --scalar-color-3: rgba(255, 255, 245, .38);\n  --scalar-color-disabled: rgba(255, 255, 245, .25);\n  --scalar-color-ghost: rgba(255, 255, 245, .25);\n  --scalar-color-accent: #e36002;\n  --scalar-background-1: #1e1e20;\n  --scalar-background-2: #2a2a2a;\n  --scalar-background-3: #505053;\n  --scalar-background-4: rgba(255, 255, 255, 0.06);\n  --scalar-background-accent: #e360021f;\n\n  --scalar-border-color: rgba(255, 255, 255, 0.1);\n  --scalar-scrollbar-color: rgba(255, 255, 255, 0.24);\n  --scalar-scrollbar-color-active: rgba(255, 255, 255, 0.48);\n  --scalar-lifted-brightness: 1.45;\n  --scalar-backdrop-brightness: 0.5;\n\n  --scalar-shadow-1: 0 1px 3px 0 rgb(0, 0, 0, 0.1);\n  --scalar-shadow-2: rgba(15, 15, 15, 0.2) 0px 3px 6px,\n    rgba(15, 15, 15, 0.4) 0px 9px 24px, 0 0 0 1px rgba(255, 255, 255, 0.1);\n\n  --scalar-button-1: #f6f6f6;\n  --scalar-button-1-color: #000;\n  --scalar-button-1-hover: #e7e7e7;\n\n  --scalar-color-green: #3dd68c;\n  --scalar-color-red: #f66f81;\n  --scalar-color-yellow: #f9b44e;\n  --scalar-color-blue: #5c73e7;\n  --scalar-color-orange: #ff8d4d;\n  --scalar-color-purple: #b191f9;\n}\n/* Sidebar */\n.dark-mode .sidebar {\n  --scalar-sidebar-background-1: #161618;\n  --scalar-sidebar-item-hover-color: var(--scalar-color-accent);\n  --scalar-sidebar-item-hover-background: transparent;\n  --scalar-sidebar-item-active-background: transparent;\n  --scalar-sidebar-border-color: transparent;\n  --scalar-sidebar-color-1: var(--scalar-color-1);\n  --scalar-sidebar-color-2: var(--scalar-color-2);\n  --scalar-sidebar-color-active: var(--scalar-color-accent);\n  --scalar-sidebar-search-background: #252529;\n  --scalar-sidebar-search-border-color: transparent;\n  --scalar-sidebar-search-color: var(--scalar-color-3);\n}\n`\n\ntype Configuration<E extends Env> =\n  | Partial<ApiReferenceConfiguration>\n  | ((c: Context<E>) => Partial<ApiReferenceConfiguration> | Promise<Partial<ApiReferenceConfiguration>>)\n\n/**\n * The Hono middleware for the Scalar API Reference.\n */\nexport const Scalar = <E extends Env>(configOrResolver: Configuration<E>): MiddlewareHandler<E> => {\n  return async (c) => {\n    let resolvedConfig: Partial<ApiReferenceConfiguration> = {}\n\n    if (typeof configOrResolver === 'function') {\n      resolvedConfig = await configOrResolver(c)\n    } else {\n      resolvedConfig = configOrResolver\n    }\n\n    // Merge the defaults\n    const configuration = {\n      ...DEFAULT_CONFIGURATION,\n      ...resolvedConfig,\n    }\n\n    // Respond with the HTML document\n    return c.html(getHtmlDocument(configuration, customTheme))\n  }\n}\n\n/**\n * @deprecated Use `Scalar` instead.\n */\nexport const apiReference = Scalar\n"],
  "mappings": "AAAA,SAAS,uBAAuB;AAQhC,MAAM,wBAA4D;AAAA,EAChE,cAAc;AAChB;AAKO,MAAM,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2DpB,MAAM,SAAS,CAAgB,qBAA6D;AACjG,SAAO,OAAO,MAAM;AAClB,QAAI,iBAAqD,CAAC;AAE1D,QAAI,OAAO,qBAAqB,YAAY;AAC1C,uBAAiB,MAAM,iBAAiB,CAAC;AAAA,IAC3C,OAAO;AACL,uBAAiB;AAAA,IACnB;AAGA,UAAM,gBAAgB;AAAA,MACpB,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAGA,WAAO,EAAE,KAAK,gBAAgB,eAAe,WAAW,CAAC;AAAA,EAC3D;AACF;AAKO,MAAM,eAAe;",
  "names": []
}
